<!--アップロード画像-->
<div class="col-sm-6 makings__new--sectionA">
  <h3 class="makings__new--headline">オリジナル画像</h3>

  <div id="crop_area_box">
    <div class="makings__new--labelBox">
      <label>
        <%= file_field_tag '', id: "crop_image", style: "display: none;"%>
        <div class="makings__new--inputLabel">画像をアップロード</div>
      </label>
    </div>
  </div>
</div>


<!--プレビュー画面-->
<div class="col-sm-6 makings__new--sectionB">
  <h3 class="makings__new--headline">プレビュー表示</h3>

  <div id="crop_preview" overflow="hidden">
    <h3 class="makings__new--caution">
      この表示が出る場合は
      リロードしてください。
    </h3>
  </div>

  <div class="makings__new--changeButton">
    <button type="button" name="button" onclick="changeBinarizationMode(this);" class="btn btn-info">
      次へ
    </button>
  </div>
</div>

<!-- キャンバスサイズの初期設定必須 -->
<div class="col-sm-6 makings__new--sectionC">
  <h3>２値化処理</h3>

  <!-- ２値化画像 -->
  <canvas id="crop_preview_binarization"></canvas>
  <p>
    <label for="threshold_label">閾値：</label>
    <%= number_field_tag "threshold_form", 0, {size: 50, in: 0..256} %><br>

    <label for="cells_condition_label">「生」セルの領域：</label>
    <%= select_tag "cells_condition_form", options_for_select( {"白": 255, "黒": 0 } ) %>


  </p>
  <%= form_with( model: Making, url: making_path ) do | f | %>
  <%= f.hidden_field :making_text %>
  <input type="button" value="終了" onClick="convertCanvasToMakingPattern(this);" class="btn btn-success" >
  <% end %>
</div>


<script type="text/javascript">
  /*
  * =============================
  * Makings#new遷移時処理
  * =============================
  */
  $( function() {
    // リロード促進メッセージの削除
    $(".makings__new--caution").text("");
    // アップロードボタンの表示
    $(".makings__new--sectionA").css({"display": "block"});
    // プレビュー見出しの表示
    $(".makings__new--headline").css({"display": "block"});

    var fileName;
    // ===== 画像ファイルアップロード時の処理 ===============
    $("#crop_image").on( 'change', function(event) {
      // アップロードしたファイルの取得
      let file = event.target.files[0];
      // 画像ファイル以外の場合は何もしない
      if ( file.type.indexOf('image') < 0 ) { return false; }
      // ファイル名取得
      fileName = file.name;
      let reader = new FileReader();
      // ファイル読み込みが完了した際のイベント登録
      reader.onload = ( function(file) {
        return function(event) {
          // クロッピングする画像の<img>タグ生成
          let currentCroppingImage = $('<img>').attr({
            src: event.target.result,
            id: "crop_image",
            title: fileName
          });
          $('#crop_area_box').html( currentCroppingImage );
          // 初期設定
          initCrop();
        };
      })(file);

      reader.readAsDataURL(file);

      $(".makings__new--changeButton").fadeIn();
      return;
    });

    // ===== フォームの閾値が変化した際に画像２値化処理実行 ===============
    $("#threshold_form").on( 'change', () => imageBinarization() );
  });
</script>
